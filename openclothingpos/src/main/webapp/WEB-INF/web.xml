<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<!-- 修改servlet版本为3.0 -->
	
	<display-name>基于spring MVC，spring，mybatis的服装POS系统</display-name>
	<!-- 配置spring DispatcherServlet -->
	<servlet>
		<servlet-name>cpos-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置springMVC需要加载的配置文件
			spring-dao.xml,spring-service.xml,spring-web.xml
			Mybatis -> spring -> springMVC
		 -->
		 <init-param>
		 	<param-name>contextConfigLocation</param-name>
		 	<param-value>classpath:spring/spring-*.xml</param-value>
		 </init-param>
		 <!-- 
			1)load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。
	
			2)它的值必须是一个整数，表示servlet应该被载入的顺序
			
			2)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；
			
			3)当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。
			
			4)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
			
			5)当值相同时，容器就会自己选择顺序来加载。
			
			所以，<load-on-startup>x</load-on-startup>，中x的取值1，2，3，4，5代表的是优先级，而非启动延迟时间。
		 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cpos-dispatcher</servlet-name>
		<!-- 默认匹配所有请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.htm</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/404.htm</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/500.htm</location>
	</error-page>
</web-app>